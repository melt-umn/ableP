<project name='edu:umn:cs:melt:ableP:artifacts:promela' default='dist' basedir='.'>
  <description>Build the grammar edu:umn:cs:melt:ableP:artifacts:promela </description>

  <property environment='env'/>
  <property name='jg' location='../../../../../../../../silver/trunk/generated/'/>
  <property name='sh' location='../../../../../../../../silver/trunk/jars/'/>
  <property name='bin' location='${jg}/bin'/>
  <property name='src' location='${jg}/src'/>

  <path id='lib.classpath'>
    <fileset dir='${sh}' includes='SilverRuntime.jar CopperRuntime.jar CopperCompiler.jar' />
  </path>

  <path id='src.classpath'>
    <pathelement location='${src}' />
  </path>

  <path id='compile.classpath'>
    <path refid='src.classpath'/>
    <path refid='lib.classpath'/>
  </path>

  <taskdef name='copper' classname='edu.umn.cs.melt.copper.ant.CopperAntTask' classpathref='lib.classpath'/>


  <target name='init'>

    <!-- Create the time stamp -->
    <tstamp>
      <format property='TIME' pattern='MM/dd/yyyy hh:mm aa'/>
    </tstamp>

    <mkdir dir='${bin}'/>
  </target>

  <target name='dist' depends='grammars'>

    <pathconvert refid='lib.classpath' pathsep=' ' property='man.classpath' />
    <jar destfile='ableP.promela.jar' basedir='${bin}'>
       <include name='edu/umn/cs/melt/ableP/artifacts/promela/*.class' />
       <include name='core/*.class' />
       <include name='edu/umn/cs/melt/ableP/host/*.class' />
       <include name='edu/umn/cs/melt/ableP/terminals/*.class' />
       <include name='edu/umn/cs/melt/ableP/concretesyntax/*.class' />
       <include name='edu/umn/cs/melt/ableP/abstractsyntax/*.class' />
       <include name='lib/langproc/errors/*.class' />
       <include name='edu/umn/cs/melt/ableP/host/driver/*.class' />
       <include name='lib/extcore/*.class' />
       <include name='edu/umn/cs/melt/ableP/host/hostParser/*.class' />
       <include name='edu/umn/cs/melt/ableC/terminals/*.class' />
       <include name='edu/umn/cs/melt/ableC/host/exts/cpptags/*.class' />
       <include name='edu/umn/cs/melt/ableC/abstractsyntax/*.class' />
       <include name='edu/umn/cs/melt/ableC/host/exts/gcc/*.class' />
       <include name='edu/umn/cs/melt/ableC/concretesyntax/*.class' />
      <manifest>
       <attribute name='Main-Class' value='edu.umn.cs.melt.ableP.artifacts.promela.Main' />
       <attribute name='Class-Path' value='${man.classpath}' />
       <attribute name='Built-By' value='${user.name}' />
       <section name='version'>
         <attribute name='Specification-Version' value='' />
         <attribute name='Implementation-Version' value='${TIME}' />
       </section>
      </manifest>
    </jar>

  </target>

  <target name='grammars' depends='init, copper'>
      <javac debug='on' source='1.5' classpathref='compile.classpath' srcdir='${src}' destdir='${bin}' includeantruntime='false'>
       <include name='edu/umn/cs/melt/ableP/artifacts/promela/*.java' />
       <include name='core/*.java' />
       <include name='edu/umn/cs/melt/ableP/host/*.java' />
       <include name='edu/umn/cs/melt/ableP/terminals/*.java' />
       <include name='edu/umn/cs/melt/ableP/concretesyntax/*.java' />
       <include name='edu/umn/cs/melt/ableP/abstractsyntax/*.java' />
       <include name='lib/langproc/errors/*.java' />
       <include name='edu/umn/cs/melt/ableP/host/driver/*.java' />
       <include name='lib/extcore/*.java' />
       <include name='edu/umn/cs/melt/ableP/host/hostParser/*.java' />
       <include name='edu/umn/cs/melt/ableC/terminals/*.java' />
       <include name='edu/umn/cs/melt/ableC/host/exts/cpptags/*.java' />
       <include name='edu/umn/cs/melt/ableC/abstractsyntax/*.java' />
       <include name='edu/umn/cs/melt/ableC/host/exts/gcc/*.java' />
       <include name='edu/umn/cs/melt/ableC/concretesyntax/*.java' />
      </javac>
  </target>

  <target name='copper'>
    <copper fullClassName='edu.umn.cs.melt.ableP.host.hostParser.Parser_edu_umn_cs_melt_ableP_host_hostParser_promelaParser' inputFile='${src}/edu/umn/cs/melt/ableP/host/hostParser/Parser_edu_umn_cs_melt_ableP_host_hostParser_promelaParser.copper' outputFile='${src}/edu/umn/cs/melt/ableP/host/hostParser/Parser_edu_umn_cs_melt_ableP_host_hostParser_promelaParser.java' skin='xml' warnUselessNTs='no' dump='true' dumpType='html' dumpOnlyOnError='true' dumpFile='Parser_edu_umn_cs_melt_ableP_host_hostParser_promelaParser.copperdump.html'/>
  </target>


</project>
