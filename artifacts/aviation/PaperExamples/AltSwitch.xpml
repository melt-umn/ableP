mtype = {Unknown, Above, Below } ;   /* altitude status values */
mtype = {High, Med, Low} ;           /* quality of instrument readings */

chan startup = [0] of {int, int} ;
chan monitor = [0] of {mtype, mtype} ;

timer trouble_t ;   /* expands to "int trouble_t = -1;" */

/* Dont show this */
proctype monitorStatus () 
{ mtype stat; int alt;      printf("monitor status ... \n") ;
  do :: monitor ? alt, stat ; printf ("Warning.") ; od ; }

active proctype determineStatus () 
{
 int altitude, threshold, hyst ;
 mtype altQuality, altStatus = Unknown ;

 startup ? threshold, hyst ;  /* receive threshold and hysteresis values */
 timer above_t ;              /* expands to "int above_t; above_t = -1;" */
 run monitorStatus ( ) ;      /* start monitoring process */

 check:  /* determine the altitude status from altitude and altQuality. */
  select (altitude: 1000 .. 10000 step 100) ;
  select (altQuality: High, Med, Low) ;

  if :: tbl altStatus == Unknown        : T *  /* Assign value to altStatus */
            altQuality == High          : T T
            altitude > threshold        : T T
            altitude > threshold + hyst : * T  
        lbt -> altStatus = Above ;
     :: tbl altQuality == High   : T
            altitude > threshold : F  
        lbt -> altStatus = Below ; 
     :: else; altStatus = (altQuality == High -> Unknown : altStatus) ;
  fi ;

  if :: altStatus == Above -> goto above; 
     :: altStatus == Below || altStatus == Unknown -> goto trouble;
  fi ;

 above:
   delay(above_t,1);              /* delay until next "tick" */
   goto check ;

 trouble:
   monitor!altStatus,altitude ;   /* send msg to monitor */
   delay(trouble_t,1);            /* delay until next "tick" */
   goto check ;
}


